variables:
 TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA #unix id

stages:
- build
- deploy_to_production

build:
 stage: build
 image: docker:latest
 services:
 - docker:dind #docker in docker
 only:
 - /^live_[0-9]+(?:.[0-9]+)+$/ # regular expression live_0.0.1, live_0.0.2, live_0.0.3, etc.
 script:
 - docker build -t $TAG_COMMIT . #build docker image từ mã nguồn
 - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY #login vào docker registry
 - docker push $TAG_COMMIT #push docker image lên registry

deploy:
 stage: deploy_to_production
 image: alpine:latest #linux
 tags:
 - html
 only:
 - /^live_[0-9]+(?:.[0-9]+)+$/ # regular expression live_0.0.1, live_0.0.2, live_0.0.3, etc.
 script:
 - echo $GITLAB_CI_SSH_KEY
 - chmod 600 $GITLAB_CI_SSH_KEY
 - apk update && apk add openssh-client #cài đặt package openssh-client
 - ssh -o StrictHostKeyChecking=no -i $GITLAB_CI_SSH_KEY $SERVER_USER@$SERVER_HOST "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY" #login vào registry
 - ssh -o StrictHostKeyChecking=no -i $GITLAB_CI_SSH_KEY $SERVER_USER@$SERVER_HOST "docker pull $TAG_COMMIT" #pull docker image về server
 - ssh -o StrictHostKeyChecking=no -i $GITLAB_CI_SSH_KEY $SERVER_USER@$SERVER_HOST "docker container rm -f html-app || true" #xoá ảnh cũ có tên là html-app đi
 - ssh -o StrictHostKeyChecking=no -i $GITLAB_CI_SSH_KEY $SERVER_USER@$SERVER_HOST "docker run -d --name html-app -p 80:80 $TAG_COMMIT" #run docker image với tên là html-app
 environment:
  name: production    #hihihihih
  url: http://$SERVER_HOST #url của server chạy web
